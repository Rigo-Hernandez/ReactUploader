{"ast":null,"code":"'use strict';\n\nvar fileFactory = require('./fileFactory');\n\nvar processMultipart = require('./processMultipart');\n\nvar isEligibleRequest = require('./isEligibleRequest');\n\nvar processNested = require('./processNested');\n\nvar _require = require('./utilities'),\n    buildOptions = _require.buildOptions;\n\nvar fileUploadOptionsDefaults = {\n  safeFileNames: false,\n  preserveExtension: false,\n  abortOnLimit: false,\n  responseOnLimit: 'File size limit has been reached',\n  limitHandler: false,\n  createParentPath: false,\n  parseNested: false,\n  useTempFiles: false,\n  tempFileDir: '/tmp'\n};\n/**\n * Expose the file upload middleware\n */\n\nmodule.exports = function (fileUploadOptions) {\n  fileUploadOptions = buildOptions(fileUploadOptionsDefaults, fileUploadOptions);\n  return function (req, res, next) {\n    if (!isEligibleRequest(req)) {\n      return next();\n    }\n\n    processMultipart(fileUploadOptions, req, res, next);\n  };\n};\n/**\n * Quietly expose fileFactory and processNested; useful for testing\n */\n\n\nmodule.exports.fileFactory = fileFactory;\nmodule.exports.processNested = processNested;","map":null,"metadata":{},"sourceType":"script"}