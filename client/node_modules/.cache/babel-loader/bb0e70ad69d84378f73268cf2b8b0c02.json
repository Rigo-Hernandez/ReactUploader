{"ast":null,"code":"var ACCEPTABLE_CONTENT_TYPE = /^(multipart\\/.+);(.*)$/i;\nvar UNACCEPTABLE_METHODS = ['GET', 'HEAD'];\n/**\n * Ensures the request contains a content body\n * @param  {Object}  req Express req object\n * @returns {Boolean}\n */\n\nvar hasBody = function hasBody(req) {\n  return 'transfer-encoding' in req.headers || 'content-length' in req.headers && req.headers['content-length'] !== '0';\n};\n/**\n * Ensures the request is not using a non-compliant multipart method\n * such as GET or HEAD\n * @param  {Object}  req Express req object\n * @returns {Boolean}\n */\n\n\nvar hasAcceptableMethod = function hasAcceptableMethod(req) {\n  return !UNACCEPTABLE_METHODS.includes(req.method);\n};\n/**\n * Ensures that only multipart requests are processed by express-fileupload\n * @param  {Object}  req Express req object\n * @returns {Boolean}\n */\n\n\nvar hasAcceptableContentType = function hasAcceptableContentType(req) {\n  return ACCEPTABLE_CONTENT_TYPE.test(req.headers['content-type']);\n};\n/**\n * Ensures that the request in question is eligible for file uploads\n * @param {Object} req Express req object\n * @returns {Boolean}\n */\n\n\nmodule.exports = function (req) {\n  return hasBody(req) && hasAcceptableMethod(req) && hasAcceptableContentType(req);\n};","map":null,"metadata":{},"sourceType":"script"}